import asyncio
from telegram import Update
from telegram.ext import ContextTypes
from rag.pipeline import RAGPipeline


class BotHandlers:
    def __init__(self, rag_config):
        self.rag_pipeline = RAGPipeline(rag_config)

        self.greeting_message = """
        üëã –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º KATA EDR.

        üí° –ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å –æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏, –∏ —è –Ω–∞–π–¥—É –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!

        ‚ùî –ù–∞—á–Ω–∏—Ç–µ —Å –≤–æ–ø—Ä–æ—Å–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: "–°–∫–æ–ª—å–∫–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏ –∫–ª–∞—Å—Ç–µ—Ä–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ?"
        """
        # self.processing_task = asyncio.create_task(self.process_queue())
        self.message_queue = asyncio.Queue()

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text(self.greeting_message)

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_message = update.message.text
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å –≤–º–µ—Å—Ç–µ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        await self.message_queue.put((update.message.chat_id, user_message, context))


    async def process_queue(self):
        while True:
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
            chat_id, user_message, context = await self.message_queue.get()
            response = self.rag_pipeline.get_response(user_message)
            await context.bot.send_message(chat_id=chat_id, text=response)
            await asyncio.sleep(3)  # 1 —Å–µ–∫—É–Ω–¥–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª

    # async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
    #     user_message = update.message.text
    #     response = self.rag_pipeline.get_response(user_message)
    #     await update.message.reply_text(response)


